graphics_device_id: 0
env:
  env_name: "state_based_grasp"
  numEnvs: 1000
  envSpacing: 0.6
  episodeLength: 300 # 250
  enableDebugVis: False
  aggregateMode: 1

  random_prior: True
  random_time: False # True
  repose_z: True
  goal_cond: False

  
  numObservations: 300  # save states(excludes pc)  real_obs = 300 - 64 - 16 + 128 = 348
  vision:
    color:
      hand: [ 0.50, 0.50, 0.50 ] # gray
      # 0.6, 0.72, 0.98
      object: [ 1.00, 0.20, 0.20 ] # red
      goal: [ 0.50, 1.00, 0.35 ] # green
    pointclouds:
      numPresample: 65536
      numDownsample: 1024
      numEachPoint: 6
      numSample:
        goal: 0
        hand: 1024
        table: 1024
        object: 1024
    camera:
      # relative to table center
      eye: [
        [ 0.0, 0.0, 0.55 ],
        [ 0.5, 0.0, 0.05 ],
        [ -0.5, 0.0, 0.05 ],
        [ 0.0, 0.5, 0.05 ],
        [ 0.0, -0.5, 0.05 ]
      ]
      lookat: [
        [ 0.01, 0.0, 0.05 ], # camera cannot look at accurate -z
        [ 0.0, 0.0, 0.05 ],
        [ 0.0, 0.0, 0.05 ],
        [ 0.0, 0.0, 0.05 ],
        [ 0.0, 0.0, 0.05 ],
      ]
    #      eye: [[0.2, -0.5, 0.4], [1.0, 0.2, 0.4], [0.2, 0.2, 0.8]]
    #      lookat: [[0.2, 3.5, 0.4], [-3.0, 0.2, 0.4], [0.2, 0.19, -1.2]]
    probe:
      num_probes: 0 # set this to 0
      width: 256
      height: 256
      eye: [
        [ 1.6, 0.0, 2.5 ],
      ]
      forward: [
        [ -0.8, 0.0, -2.0 ],
      ]
    bar:
      x_n: -1
      x_p: 1
      y_n: -1
      y_p: 1
      z_n: 0.61
      z_p: 1.3
      depth: 1.2

  stiffnessScale: 1.0
  forceLimitScale: 1.0
  useRelativeControl: False
  dofSpeedScale: 20.0
  actionsMovingAverage: 0.1 # 1 # 0.05
  controlFrequencyInv: 1 # 60 Hz

  #### Regarding the singulation scenes ####
  object_code_dict: {
    # 'sem/RubiksCube-dba37de1080c048f4f32009f59473bea':[0.06],
    'sem/RubiksCube-dba37de1080c048f4f32009f59473bea':[0.08],
    # 'sem/RubiksCube-dba37de1080c048f4f32009f59473bea':[0.10],
    # 'sem/RubiksCube-dba37de1080c048f4f32009f59473bea':[0.12],
    # 'sem/RubiksCube-dba37de1080c048f4f32009f59473bea':[0.15],
  }
  # expert_id 1: (avoid) loose environment with random poses and grid positions (collision may happen during init)
  # expert_id 2: dense environment with random grid positions
  # expert_id 3: loose environment read from saved pose file
  expert_id: 2
  # choose among 0.075 0.10 0.12 for scale 0.06 0.08 0.10
  separation_dist: 0.10
  surrounding_obj_num: 8
  random_grid_sequences: True
  random_surrounding_positions: True
  random_surrounding_orientations: True


  save_camera: False # False (0.01 table) for expert, True (0.6 table) for trajectory recording and distillation
  table_dim_z: 0.01 # 0.01 for training, 0.6 for recording trajecotry and pointcloud
  remove_invalid_arrangement: False
  filter_randomized_arrangements: False

  use_hand_rotation: False
  hand_rotation_coef: 0.001

  randomize_object_center: False # for grasping only policy
  randomize_object_center_range: 0.04

  randomize_object_mass: False
  randomize_object_mass_range: 0.02

  use_hand_link_pose: True
  include_dummy_dofs: True # this adds another 18 dofs to the observation

  shuffle_object_arrangements: False #! exclusively for expert 3 multi-stage testing, false for training
  ##########################################

  startPositionNoise: 0.0
  startRotationNoise: 0.0

  resetPositionNoise: 0.0
  resetRotationNoise: 0.0
  resetDofPosRandomInterval: 0.0
  resetDofVelRandomInterval: 0.0

  distRewardScale: 20
  transition_scale: 0.5
  orientation_scale: 0.1
  rotRewardScale: 1.0
  rotEps: 0.1
  actionPenaltyScale: -0.0002
  reachGoalBonus: 250
  fallDistance: 0.4
  fallPenalty: 0.0

  objectType: "pot" 
  observationType: "full_state"
  handAgentIndex: "[[0, 1, 2, 3, 4, 5]]"
  asymmetric_observations: False
  successTolerance: 0.1
  printNumSuccesses: False
  maxConsecutiveSuccesses: 0

  asset:
    assetRoot: "../../Assets"
    assetFileName: "mjcf/open_ai_assets/hand/shadow_hand.xml"
    assetFileNameBlock: "urdf/objects/cube_multicolor.urdf"
    assetFileNameBall: "urdf/objects/ball.urdf"
    assetFileNameEgg: "mjcf/open_ai_assets/hand/egg.xml"
    assetFileNamePen: "mjcf/open_ai_assets/hand/pen.xml"

task:
  randomize: False
  randomization_params:
    frequency: 600   # Define how many simulation steps between generating new randomizations
    observations:
      range: [ 0, .002 ] # range for the white noise
      range_correlated: [ 0, .001 ] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      schedule: "linear"   # "constant" is to turn on noise after `schedule_steps` num steps
      schedule_steps: 40000
    actions:
      range: [ 0., .05 ]
      range_correlated: [ 0, .015 ] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
      schedule_steps: 40000
    sim_params:
      gravity:
        range: [ 0, 0.4 ]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 40000
    actor_params:
      hand:
        color: True
        tendon_properties:
          damping:
            range: [ 0.3, 3.0 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          stiffness:
            range: [ 0.75, 1.5 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        dof_properties:
          damping:
            range: [ 0.3, 3.0 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          stiffness:
            range: [ 0.75, 1.5 ]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          lower:
            range: [ 0, 0.01 ]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          upper:
            range: [ 0, 0.01 ]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_body_properties:
          mass:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [ 0.7, 1.3 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
      object:
        scale:
          range: [ 0.95, 1.05 ]
          operation: "scaling"
          distribution: "uniform"
          schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
          schedule_steps: 30000
        rigid_body_properties:
          mass:
            range: [ 0.5, 1.5 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [ 0.7, 1.3 ]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000

sim:
  substeps: 2
  physx:
    num_threads: 4
    solver_type: 1  # 0: pgs, 1: tgs
    num_position_iterations: 8 # 8 bottle
    num_velocity_iterations: 0
    contact_offset: 0.002
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
  flex:
    num_outer_iterations: 5
    num_inner_iterations: 20
    warm_start: 0.8
    relaxation: 0.75